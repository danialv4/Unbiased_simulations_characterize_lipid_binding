#Select lipid interactively
echo "lipid?"
read lip

for i in 1 2 3 4 5
do

#To fix the mass reading in VMD
sed -i "s/ BB/  N/g" md_${lip}_seed${i}_prot_center_pbcmol.gro
sed -i "s/ D2/ C2/g" md_${lip}_seed${i}_prot_center_pbcmol.gro
sed -i "s/ GL/ CL/g" md_${lip}_seed${i}_prot_center_pbcmol.gro
sed -i "s/ ROH/ COH/g" md_${lip}_seed${i}_prot_center_pbcmol.gro
sed -i "s/ R1/ C1/g" md_${lip}_seed${i}_prot_center_pbcmol.gro
sed -i "s/ R2/ C2/g" md_${lip}_seed${i}_prot_center_pbcmol.gro
sed -i "s/ R3/ C3/g" md_${lip}_seed${i}_prot_center_pbcmol.gro
sed -i "s/ R4/ C4/g" md_${lip}_seed${i}_prot_center_pbcmol.gro
sed -i "s/ R5/ C5/g" md_${lip}_seed${i}_prot_center_pbcmol.gro
sed -i "s/ R6/ C6/g" md_${lip}_seed${i}_prot_center_pbcmol.gro

echo -e "1|13 \n q" | gmx make_ndx -f md_${lip}_seed${i}_prot_center_pbcmol.gro -o indexf_${lip}_seed${i}.ndx

#Extract the first frame of the first seed, used as reference structure to align all trajectories
gmx trjconv -f md_${lip}_seed${i}_prot_center_pbcmol.xtc -s md_${lip}_seed1_prot_center_pbcmol.gro -n indexf_${lip}_seed${i}.ndx -fit rot+trans -o md_${lip}_seed${i}_fitcom.gro -e 1 <<< '4 16'

#First a fitting using only translation, to avoid crashes
gmx trjconv -f md_${lip}_seed${i}_prot_center_pbcmol.xtc -s md_${lip}_seed1_prot_center_pbcmol.gro -n indexf_${lip}_seed${i}.ndx -fit trans -o md_${lip}_seed${i}_fitcomt.xtc <<< '4 16'

#Then the fitting using rotation and translation
gmx trjconv -f md_${lip}_seed${i}_fitcomt.xtc -s md_${lip}_seed1_fitcom.gro -n indexf_${lip}_seed${i}.ndx -fit rot+trans -o md_${lip}_seed${i}_fitcom.xtc <<< '4 16'

rm md_${lip}_seed${i}_fitcomt.xtc

#Extract the COM of the lipid along the trajectory and write its coordinates to coord$i.xvg
gmx traj -f md_${lip}_seed${i}_fitcom.xtc -com -s md_${lip}_seed${i}_fitcom.gro -ox coord$i.xvg <<< '13'

#Convert the xvg file to a GRO that can be used in VMD to represent the COM as spheres
xvg_file="coord${i}.xvg"
output_gro="coord${i}_$lip.gro"

# Check if the XVG file exists
if [ ! -f "$xvg_file" ]; then
    echo "Error: XVG file '$xvg_file' not found."
    exit 1
fi

# Read coordinates from XVG file
coordinates=()
while read -r line; do
    # Skip lines starting with @ or #
    [[ $line == [@#]* ]] && continue

    # Extract last three variables
    coord=$(awk '{print $(NF-2), $(NF-1), $NF}' <<< "$line")
    coordinates+=("$coord")
done < "$xvg_file"

write_gro_file() {
    local filename="$1"
    local num_atoms="${#coordinates[@]}"
    local gro_template="%5d%-5s%5s%5d%8.3f%8.3f%8.3f\n"

    echo "Generated by Bash Script" > "$filename"
    echo "$num_atoms" >> "$filename"

    atom_id=1
    for coord in "${coordinates[@]}"; do
        read -r x y z <<< "$coord"
        printf "$gro_template" 1 "C" "C" "$atom_id" "$x" "$y" "$z" >> "$filename"
        ((atom_id++))
    done

    echo "   10.00000   10.00000   10.00000" >> "$filename"
}

write_gro_file "$output_gro"

done

